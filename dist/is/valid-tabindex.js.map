{"version":3,"sources":["../../src/is/valid-tabindex.js"],"names":["context","supports","validIntegerPattern","focusTabindexTrailingCharacters","validIntegerPatternWithTrailing","validIntegerPatternNoTrailing","element","label","resolveDocument","hasTabindex","hasAttribute","hasTabIndex","isSvgElement","ownerSVGElement","nodeName","toLowerCase","focusSvgTabindexAttribute","focusInvalidTabindex","tabindex","getAttribute","Boolean","test"],"mappings":";;;;;;kBAYe,UAASA,OAAT,EAAkB;AAC/B,MAAI,CAACC,QAAL,EAAe;AACbA,eAAW,yBAAX;AACD;;AAED,MAAMC,sBAAsBD,SAASE,+BAAT,GACxBC,+BADwB,GAExBC,6BAFJ;;AAIA,MAAMC,UAAU,gCAAiB;AAC/BC,WAAO,mBADwB;AAE/BC,qBAAiB,IAFc;AAG/BR;AAH+B,GAAjB,CAAhB;;AAMA;AACA;AACA,MAAMS,cAAcH,QAAQI,YAAR,CAAqB,UAArB,CAApB;AACA,MAAMC,cAAcL,QAAQI,YAAR,CAAqB,UAArB,CAApB;;AAEA,MAAI,CAACD,WAAD,IAAgB,CAACE,WAArB,EAAkC;AAChC,WAAO,KAAP;AACD;;AAED;AACA,MAAMC,eAAeN,QAAQO,eAAR,IAA2BP,QAAQQ,QAAR,CAAiBC,WAAjB,OAAmC,KAAnF;AACA,MAAIH,gBAAgB,CAACX,SAASe,yBAA9B,EAAyD;AACvD,WAAO,KAAP;AACD;;AAED;AACA,MAAIf,SAASgB,oBAAb,EAAmC;AACjC,WAAO,IAAP;AACD;;AAED;AACA,MAAMC,WAAWZ,QAAQa,YAAR,CAAqBV,cAAc,UAAd,GAA2B,UAAhD,CAAjB;AACA;AACA;AACA,MAAIS,aAAa,QAAjB,EAA2B;AACzB,WAAO,KAAP;AACD;;AAED,SAAOE,QAAQF,YAAYhB,oBAAoBmB,IAApB,CAAyBH,QAAzB,CAApB,CAAP;AACD,C;;AArDD;;;;AACA;;;;;;AAHA;;AAIA,IAAIjB,iBAAJ;;AAEA;AACA;AACA,IAAMI,gCAAgC,uBAAtC;AACA,IAAMD,kCAAkC,sBAAxC","file":"valid-tabindex.js","sourcesContent":["\r\n// determine if an element's tabindex attribute has a valid value\r\n\r\nimport contextToElement from '../util/context-to-element';\r\nimport _supports from '../supports/supports';\r\nlet supports;\r\n\r\n// https://www.w3.org/TR/html5/infrastructure.html#rules-for-parsing-integers\r\n// NOTE: all browsers agree to allow trailing spaces as well\r\nconst validIntegerPatternNoTrailing = /^\\s*(-|\\+)?[0-9]+\\s*$/;\r\nconst validIntegerPatternWithTrailing = /^\\s*(-|\\+)?[0-9]+.*$/;\r\n\r\nexport default function(context) {\r\n  if (!supports) {\r\n    supports = _supports();\r\n  }\r\n\r\n  const validIntegerPattern = supports.focusTabindexTrailingCharacters\r\n    ? validIntegerPatternWithTrailing\r\n    : validIntegerPatternNoTrailing;\r\n\r\n  const element = contextToElement({\r\n    label: 'is/valid-tabindex',\r\n    resolveDocument: true,\r\n    context,\r\n  });\r\n\r\n  // Edge 14 has a capitalization problem on SVG elements,\r\n  // see https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/9282058/\r\n  const hasTabindex = element.hasAttribute('tabindex');\r\n  const hasTabIndex = element.hasAttribute('tabIndex');\r\n\r\n  if (!hasTabindex && !hasTabIndex) {\r\n    return false;\r\n  }\r\n\r\n  // older Firefox and Internet Explorer don't support tabindex on SVG elements\r\n  const isSvgElement = element.ownerSVGElement || element.nodeName.toLowerCase() === 'svg';\r\n  if (isSvgElement && !supports.focusSvgTabindexAttribute) {\r\n    return false;\r\n  }\r\n\r\n  // @browser-issue Gecko https://bugzilla.mozilla.org/show_bug.cgi?id=1128054\r\n  if (supports.focusInvalidTabindex) {\r\n    return true;\r\n  }\r\n\r\n  // an element matches the tabindex selector even if its value is invalid\r\n  const tabindex = element.getAttribute(hasTabindex ? 'tabindex' : 'tabIndex');\r\n  // IE11 parses tabindex=\"\" as the value \"-32768\"\r\n  // @browser-issue Trident https://connect.microsoft.com/IE/feedback/details/1072965\r\n  if (tabindex === '-32768') {\r\n    return false;\r\n  }\r\n\r\n  return Boolean(tabindex && validIntegerPattern.test(tabindex));\r\n}\r\n"]}