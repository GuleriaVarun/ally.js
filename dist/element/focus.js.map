{"version":3,"sources":["../../src/element/focus.js"],"names":["context","defaultToAncestor","undoScrolling","element","label","targetIsFocusable","isFocusable","rules","except","target","_undoScrolling","result","focus","_window","HTMLElement","prototype","call","e","actionPerformed","flexbox","scrollable","onlyTabbable"],"mappings":";;;;;;kBA2Ce,UAASA,OAAT,EAGP;AAAA,iFAAJ,EAAI;AAAA,MAFNC,iBAEM,QAFNA,iBAEM;AAAA,MADNC,aACM,QADNA,aACM;;AACN,MAAMC,UAAU,gCAAiB;AAC/BC,WAAO,eADwB;AAE/BJ;AAF+B,GAAjB,CAAhB;;AAKA,MAAMK,oBAAoBC,oBAAYC,KAAZ,CAAkB;AAC1CP,aAASG,OADiC;AAE1CK;AAF0C,GAAlB,CAA1B;;AAKA,MAAI,CAACP,iBAAD,IAAsB,CAACI,iBAA3B,EAA8C;AAC5C,WAAO,IAAP;AACD;;AAED,MAAMI,SAAS,2BAAe;AAC5BT,aAASG,OADmB;AAE5BK;AAF4B,GAAf,CAAf;;AAKA,MAAI,CAACC,MAAL,EAAa;AACX,WAAO,IAAP;AACD;;AAED,MAAI,6BAAgBA,MAAhB,CAAJ,EAA6B;AAC3B,WAAOA,MAAP;AACD;;AAED,MAAIC,uBAAJ;AACA,MAAIR,aAAJ,EAAmB;AACjBQ,qBAAiB,8BAAeD,MAAf,CAAjB;AACD;;AAED,MAAME,SAASC,MAAMH,MAAN,CAAf;;AAEAC,oBAAkBA,gBAAlB;;AAEA,SAAOC,MAAP;AACD,C;;AAjFD;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,SAASC,KAAT,CAAeT,OAAf,EAAwB;AACtB,MAAIA,QAAQS,KAAZ,EAAmB;AACjBT,YAAQS,KAAR;AACA,WAAO,6BAAgBT,OAAhB,IAA2BA,OAA3B,GAAqC,IAA5C;AACD;;AAED,MAAMU,UAAU,yBAAUV,OAAV,CAAhB;;AAEA,MAAI;AACF;AACA;AACA;AACA;AACA;AACAU,YAAQC,WAAR,CAAoBC,SAApB,CAA8BH,KAA9B,CAAoCI,IAApC,CAAyCb,OAAzC;AACA,WAAO,6BAAgBA,OAAhB,IAA2BA,OAA3B,GAAqC,IAA5C;AACD,GARD,CAQE,OAAOc,CAAP,EAAU;AACV,QAAMC,kBAAkB,qBAA0Bf,OAA1B,CAAxB;AACA,WAAOe,mBAAmB,6BAAgBf,OAAhB,CAAnB,GAA8CA,OAA9C,GAAwD,IAA/D;AACD;AACF;AA9BD;;AAgCA,IAAMK,SAAS;AACb;AACAW,WAAS,IAFI;AAGb;AACA;AACAC,cAAY,IALC;AAMb;AACAC,gBAAc;AAPD,CAAf","file":"focus.js","sourcesContent":["\r\n// wrapper for HTMLElement.prototype.focus\r\n\r\nimport focusSvgForeignObjectHack from './focus.svg-foreign-object-hack';\r\nimport getFocusTarget from '../get/focus-target';\r\nimport isActiveElement from '../is/active-element';\r\nimport isFocusable from '../is/focusable';\r\nimport contextToElement from '../util/context-to-element';\r\nimport getWindow from '../util/get-window';\r\nimport resetScrolling from '../util/reset-scrolling';\r\n\r\nfunction focus(element) {\r\n  if (element.focus) {\r\n    element.focus();\r\n    return isActiveElement(element) ? element : null;\r\n  }\r\n\r\n  const _window = getWindow(element);\r\n\r\n  try {\r\n    // The element itself does not have a focus method.\r\n    // This is true for SVG elements in Firefox and IE,\r\n    // as well as MathML elements in every browser.\r\n    // IE9 - 11 will let us abuse HTMLElement's focus method,\r\n    // Firefox and Edge will throw an error.\r\n    _window.HTMLElement.prototype.focus.call(element);\r\n    return isActiveElement(element) ? element : null;\r\n  } catch (e) {\r\n    const actionPerformed = focusSvgForeignObjectHack(element);\r\n    return actionPerformed && isActiveElement(element) ? element : null;\r\n  }\r\n}\r\n\r\nconst except = {\r\n  // exclude elements affected by the IE flexbox bug\r\n  flexbox: true,\r\n  // exclude overflowing elements that are not intentionally\r\n  // made focusable by adding a tabindex attribute\r\n  scrollable: true,\r\n  // include elements that don't have a focus() method\r\n  onlyTabbable: true,\r\n};\r\n\r\nexport default function(context, {\r\n  defaultToAncestor,\r\n  undoScrolling,\r\n} = {}) {\r\n  const element = contextToElement({\r\n    label: 'element/focus',\r\n    context,\r\n  });\r\n\r\n  const targetIsFocusable = isFocusable.rules({\r\n    context: element,\r\n    except,\r\n  });\r\n\r\n  if (!defaultToAncestor && !targetIsFocusable) {\r\n    return null;\r\n  }\r\n\r\n  const target = getFocusTarget({\r\n    context: element,\r\n    except,\r\n  });\r\n\r\n  if (!target) {\r\n    return null;\r\n  }\r\n\r\n  if (isActiveElement(target)) {\r\n    return target;\r\n  }\r\n\r\n  let _undoScrolling;\r\n  if (undoScrolling) {\r\n    _undoScrolling = resetScrolling(target);\r\n  }\r\n\r\n  const result = focus(target);\r\n\r\n  _undoScrolling && _undoScrolling();\r\n\r\n  return result;\r\n}\r\n"]}