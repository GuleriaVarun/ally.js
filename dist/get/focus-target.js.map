{"version":3,"sources":["../../src/get/focus-target.js"],"names":["context","except","element","label","result","getTarget","_element","focusable","isFocusable","rules","skipFocusable","Boolean","slice","some"],"mappings":";;;;;;kBAUe,YAAiC;AAAA,iFAAJ,EAAI;AAAA,MAAvBA,OAAuB,QAAvBA,OAAuB;AAAA,MAAdC,MAAc,QAAdA,MAAc;;AAC9C,MAAMC,UAAU,gCAAiB;AAC/BC,WAAO,kBADwB;AAE/BH;AAF+B,GAAjB,CAAhB;;AAKA,MAAII,SAAS,IAAb;AACA,MAAMC,YAAY,SAAZA,SAAY,CAASC,QAAT,EAAmB;AACnC,QAAMC,YAAYC,oBAAYC,KAAZ,CAAkB;AAClCT,eAASM,QADyB;AAElCL;AAFkC,KAAlB,CAAlB;;AAKA,QAAIM,SAAJ,EAAe;AACbH,eAASE,QAAT;AACA,aAAO,IAAP;AACD;;AAEDF,aAAS,mCAAuB;AAC9BJ,eAASM,QADqB;AAE9BI,qBAAe;AAFe,KAAvB,CAAT;;AAKA,WAAOC,QAAQP,MAAR,CAAP;AACD,GAjBD;;AAmBA,MAAIC,UAAUH,OAAV,CAAJ,EAAwB;AACtB,WAAOE,MAAP;AACD;;AAED,yBAAW,EAACJ,SAASE,OAAV,EAAX,EAA+BU,KAA/B,CAAqC,CAArC,EAAwCC,IAAxC,CAA6CR,SAA7C;AACA,SAAOD,MAAP;AACD,C;;AArCD;;;;AACA;;;;AACA;;;;AACA;;;;;;;AAPA","file":"focus-target.js","sourcesContent":["\r\n/*\r\n  Identify the first focusable element in the element's ancestry, including itself\r\n*/\r\n\r\nimport getFocusRedirectTarget from './focus-redirect-target';\r\nimport getParents from '../get/parents';\r\nimport isFocusable from '../is/focusable';\r\nimport contextToElement from '../util/context-to-element';\r\n\r\nexport default function({context, except} = {}) {\r\n  const element = contextToElement({\r\n    label: 'get/focus-target',\r\n    context,\r\n  });\r\n\r\n  let result = null;\r\n  const getTarget = function(_element) {\r\n    const focusable = isFocusable.rules({\r\n      context: _element,\r\n      except,\r\n    });\r\n\r\n    if (focusable) {\r\n      result = _element;\r\n      return true;\r\n    }\r\n\r\n    result = getFocusRedirectTarget({\r\n      context: _element,\r\n      skipFocusable: true,\r\n    });\r\n\r\n    return Boolean(result);\r\n  };\r\n\r\n  if (getTarget(element)) {\r\n    return result;\r\n  }\r\n\r\n  getParents({context: element}).slice(1).some(getTarget);\r\n  return result;\r\n}\r\n"]}