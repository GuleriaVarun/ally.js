{"version":3,"sources":["../../src/event/active-element.js"],"names":["previousActiveElement","raf","observeActiveElement","document","activeElement","body","focus","activeElementEvent","CustomEvent","bubbles","cancelable","detail","blur","dispatchEvent","requestAnimationFrame","engage","disengage","cancelAnimationFrame"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuBA,MAAIA,8BAAJ;AAtBA;;;;;;;;;;;;;;;;;;AAuBA,MAAIC,YAAJ;;AAEA,WAASC,oBAAT,GAAgC;AAC9B,QAAI,CAACC,SAASC,aAAd,EAA6B;AAC3B;AACAD,eAASE,IAAT,CAAcC,KAAd;AACD,KAHD,MAGO,IAAIH,SAASC,aAAT,KAA2BJ,qBAA/B,EAAsD;AAC3D;AACA,UAAMO,qBAAqB,IAAIC,gBAAJ,CAAgB,gBAAhB,EAAkC;AAC3DC,iBAAS,KADkD;AAE3DC,oBAAY,KAF+C;AAG3DC,gBAAQ;AACNL,iBAAOH,SAASC,aADV;AAENQ,gBAAMZ;AAFA;AAHmD,OAAlC,CAA3B;;AASAG,eAASU,aAAT,CAAuBN,kBAAvB;AACAP,8BAAwBG,SAASC,aAAjC;AACD;;AAED,QAAIH,QAAQ,KAAZ,EAAmB;AACjB;AACD;;AAEDA,UAAMa,sBAAsBZ,oBAAtB,CAAN;AACD;;AAED,WAASa,MAAT,GAAkB;AAChBd,UAAM,IAAN;AACAD,4BAAwBG,SAASC,aAAjC;AACAF;AACD;;AAED,WAASc,SAAT,GAAqB;AACnBC,yBAAqBhB,GAArB;AACAA,UAAM,KAAN;AACD;;oBAEc,+BAAgB,EAAEc,cAAF,EAAUC,oBAAV,EAAhB,C","file":"active-element.js","sourcesContent":["\r\n/*\r\n  Debugging tool that observe changes to activeElement regardless of focus/blur events.\r\n  This utility does *not* work with ShadowDOM.\r\n\r\n  USAGE:\r\n    engage();\r\n    document.body.addEventListener('active-element', function(event) {\r\n      // event.detail.focus: element that received focus\r\n      // event.detail.blur: element that lost focus\r\n    }, false);\r\n\r\n  NOTE: You *can* use event-delegation on focus events by using the capture-phase:\r\n    document.body.addEventListener('focus', function(event) {\r\n      // event.target: element that received focus\r\n      // event.relatedTarget: element that lost focus\r\n    }, true);\r\n*/\r\n\r\nimport '../prototype/window.requestanimationframe';\r\nimport CustomEvent from '../prototype/window.customevent';\r\nimport decorateService from '../util/decorate-service';\r\n\r\nlet previousActiveElement;\r\nlet raf;\r\n\r\nfunction observeActiveElement() {\r\n  if (!document.activeElement) {\r\n    // IE10 does not redirect focus to <body> when the activeElement is removed\r\n    document.body.focus();\r\n  } else if (document.activeElement !== previousActiveElement) {\r\n    // https://developer.mozilla.org/en/docs/Web/API/CustomEvent\r\n    const activeElementEvent = new CustomEvent('active-element', {\r\n      bubbles: false,\r\n      cancelable: false,\r\n      detail: {\r\n        focus: document.activeElement,\r\n        blur: previousActiveElement,\r\n      },\r\n    });\r\n\r\n    document.dispatchEvent(activeElementEvent);\r\n    previousActiveElement = document.activeElement;\r\n  }\r\n\r\n  if (raf === false) {\r\n    return;\r\n  }\r\n\r\n  raf = requestAnimationFrame(observeActiveElement);\r\n}\r\n\r\nfunction engage() {\r\n  raf = true;\r\n  previousActiveElement = document.activeElement;\r\n  observeActiveElement();\r\n}\r\n\r\nfunction disengage() {\r\n  cancelAnimationFrame(raf);\r\n  raf = false;\r\n}\r\n\r\nexport default decorateService({ engage, disengage });\r\n"]}