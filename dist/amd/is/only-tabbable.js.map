{"version":3,"sources":["../../src/is/only-tabbable.js"],"names":["isOnlyTabbableRules","context","except","onlyFocusableBrowsingContext","visible","element","label","resolveDocument","platform","is","GECKO","TRIDENT","EDGE","frameElement","nodeName","toLowerCase","tabindex","ownerSVGElement","focus","hasAttribute","isOnlyTabbable","rules"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOA,WAASA,mBAAT,GAMQ;AAAA,mFAAJ,EAAI;AAAA,QALNC,OAKM,QALNA,OAKM;AAAA,2BAJNC,MAIM;AAAA,QAJNA,MAIM,+BAJG;AACPC,oCAA8B,KADvB;AAEPC,eAAS;AAFF,KAIH;;AACN,QAAMC,UAAU,gCAAiB;AAC/BC,aAAO,kBADwB;AAE/BC,uBAAiB,IAFc;AAG/BN;AAH+B,KAAjB,CAAhB;;AAMA,QAAI,CAACC,OAAOE,OAAR,IAAmB,CAAC,uBAAUC,OAAV,CAAxB,EAA4C;AAC1C,aAAO,KAAP;AACD;;AAED,QAAI,CAACH,OAAOC,4BAAR,KAAyCK,mBAASC,EAAT,CAAYC,KAAZ,IAAqBF,mBAASC,EAAT,CAAYE,OAAjC,IAA4CH,mBAASC,EAAT,CAAYG,IAAjG,CAAJ,EAA4G;AAC1G,UAAMC,eAAe,+BAAgBR,OAAhB,CAArB;AACA,UAAIQ,YAAJ,EAAkB;AAChB,YAAI,6BAAcA,YAAd,IAA8B,CAAlC,EAAqC;AACnC;AACA;AACA,iBAAO,KAAP;AACD;AACF;AACF;;AAED,QAAMC,WAAWT,QAAQS,QAAR,CAAiBC,WAAjB,EAAjB;AACA,QAAMC,WAAW,6BAAcX,OAAd,CAAjB;;AAEA,QAAIS,aAAa,OAAb,IAAwBN,mBAASC,EAAT,CAAYC,KAAxC,EAA+C;AAC7C;AACA,aAAOM,aAAa,IAAb,IAAqBA,YAAY,CAAxC;AACD;;AAED;AACA;AACA;AACA,QAAIR,mBAASC,EAAT,CAAYC,KAAZ,IAAqBL,QAAQY,eAA7B,IAAgD,CAACZ,QAAQa,KAA7D,EAAoE;AAClE,UAAIJ,aAAa,GAAb,IAAoBT,QAAQc,YAAR,CAAqB,YAArB,CAAxB,EAA4D;AAC1D;AACA,YAAIX,mBAASC,EAAT,CAAYC,KAAhB,EAAuB;AACrB,iBAAO,IAAP;AACD;AACF;AACF;;AAED,WAAO,KAAP;AACD;;AAED;AACAV,sBAAoBE,MAApB,GAA6B,YAAsB;AAAA,QAAbA,MAAa,uEAAJ,EAAI;;AACjD,QAAMkB,iBAAiB,SAAjBA,cAAiB,CAASnB,OAAT,EAAkB;AACvC,aAAOD,oBAAoB;AACzBC,wBADyB;AAEzBC;AAFyB,OAApB,CAAP;AAID,KALD;;AAOAkB,mBAAeC,KAAf,GAAuBrB,mBAAvB;AACA,WAAOoB,cAAP;AACD,GAVD;;AAYA;AACA,MAAMA,iBAAiBpB,oBAAoBE,MAApB,CAA2B,EAA3B,CAAvB;oBACekB,c","file":"only-tabbable.js","sourcesContent":["\r\nimport isVisible from './visible';\r\nimport contextToElement from '../util/context-to-element';\r\nimport getFrameElement from '../util/get-frame-element';\r\nimport tabindexValue from '../util/tabindex-value';\r\nimport platform from '../util/platform';\r\n\r\nfunction isOnlyTabbableRules({\r\n  context,\r\n  except = {\r\n    onlyFocusableBrowsingContext: false,\r\n    visible: false,\r\n  },\r\n} = {}) {\r\n  const element = contextToElement({\r\n    label: 'is/only-tabbable',\r\n    resolveDocument: true,\r\n    context,\r\n  });\r\n\r\n  if (!except.visible && !isVisible(element)) {\r\n    return false;\r\n  }\r\n\r\n  if (!except.onlyFocusableBrowsingContext && (platform.is.GECKO || platform.is.TRIDENT || platform.is.EDGE)) {\r\n    const frameElement = getFrameElement(element);\r\n    if (frameElement) {\r\n      if (tabindexValue(frameElement) < 0) {\r\n        // iframe[tabindex=\"-1\"] and object[tabindex=\"-1\"] inherit the\r\n        // tabbable demotion onto elements of their browsing contexts\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n\r\n  const nodeName = element.nodeName.toLowerCase();\r\n  const tabindex = tabindexValue(element);\r\n\r\n  if (nodeName === 'label' && platform.is.GECKO) {\r\n    // Firefox cannot focus, but tab to: label[tabindex=0]\r\n    return tabindex !== null && tabindex >= 0;\r\n  }\r\n\r\n  // SVG Elements were keyboard focusable but not script focusable before Firefox 51.\r\n  // Firefox 51 added the focus management DOM API (.focus and .blur) to SVGElement,\r\n  // see https://bugzilla.mozilla.org/show_bug.cgi?id=778654\r\n  if (platform.is.GECKO && element.ownerSVGElement && !element.focus) {\r\n    if (nodeName === 'a' && element.hasAttribute('xlink:href')) {\r\n      // any focusable child of <svg> cannot be focused, but tabbed to\r\n      if (platform.is.GECKO) {\r\n        return true;\r\n      }\r\n    }\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\n// bind exceptions to an iterator callback\r\nisOnlyTabbableRules.except = function(except = {}) {\r\n  const isOnlyTabbable = function(context) {\r\n    return isOnlyTabbableRules({\r\n      context,\r\n      except,\r\n    });\r\n  };\r\n\r\n  isOnlyTabbable.rules = isOnlyTabbableRules;\r\n  return isOnlyTabbable;\r\n};\r\n\r\n// provide isOnlyTabbable(context) as default iterator callback\r\nconst isOnlyTabbable = isOnlyTabbableRules.except({});\r\nexport default isOnlyTabbable;\r\n"]}