{"version":3,"sources":["../../src/is/active-element.js"],"names":["context","element","label","resolveDocument","_document","activeElement","shadowHost","shadowRoot"],"mappings":";;;;;;;;;;;;;;;;;;;oBAOe,UAASA,OAAT,EAAkB;AAC/B,QAAMC,UAAU,gCAAiB;AAC/BC,aAAO,mBADwB;AAE/BC,uBAAiB,IAFc;AAG/BH;AAH+B,KAAjB,CAAhB;;AAMA,QAAMI,YAAY,2BAAYH,OAAZ,CAAlB;AACA,QAAIG,UAAUC,aAAV,KAA4BJ,OAAhC,EAAyC;AACvC,aAAO,IAAP;AACD;;AAED,QAAMK,aAAa,0BAAc,EAAEN,SAASC,OAAX,EAAd,CAAnB;AACA,QAAIK,cAAcA,WAAWC,UAAX,CAAsBF,aAAtB,KAAwCJ,OAA1D,EAAmE;AACjE,aAAO,IAAP;AACD;;AAED,WAAO,KAAP;AACD,G","file":"active-element.js","sourcesContent":["\r\n// Determines if an element is the activeElement within its context, i.e. its document iFrame or ShadowHost\r\n\r\nimport contextToElement from '../util/context-to-element';\r\nimport getShadowHost from '../get/shadow-host';\r\nimport getDocument from '../util/get-document';\r\n\r\nexport default function(context) {\r\n  const element = contextToElement({\r\n    label: 'is/active-element',\r\n    resolveDocument: true,\r\n    context,\r\n  });\r\n\r\n  const _document = getDocument(element);\r\n  if (_document.activeElement === element) {\r\n    return true;\r\n  }\r\n\r\n  const shadowHost = getShadowHost({ context: element });\r\n  if (shadowHost && shadowHost.shadowRoot.activeElement === element) {\r\n    return true;\r\n  }\r\n\r\n  return false;\r\n}\r\n"]}