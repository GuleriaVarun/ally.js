{"version":3,"sources":["../../src/is/valid-area.js"],"names":["context","supports","element","label","nodeName","toLowerCase","hasTabindex","hasAttribute","focusAreaTabindex","img","focusBrokenImageMap","complete","naturalHeight","offsetWidth","offsetHeight","focusAreaWithoutHref","href","focusAreaImgTabindex","childOfInteractive","slice","some","_element","name"],"mappings":";;;;;;;;;;;;;;;;;;;oBAce,UAASA,OAAT,EAAkB;AAC/B,QAAI,CAACC,QAAL,EAAe;AACbA,iBAAW,yBAAX;AACD;;AAED,QAAMC,UAAU,gCAAiB;AAC/BC,aAAO,eADwB;AAE/BH;AAF+B,KAAjB,CAAhB;;AAKA,QAAMI,WAAWF,QAAQE,QAAR,CAAiBC,WAAjB,EAAjB;AACA,QAAID,aAAa,MAAjB,EAAyB;AACvB,aAAO,KAAP;AACD;;AAED,QAAME,cAAcJ,QAAQK,YAAR,CAAqB,UAArB,CAApB;AACA,QAAI,CAACN,SAASO,iBAAV,IAA+BF,WAAnC,EAAgD;AAC9C;AACA,aAAO,KAAP;AACD;;AAED,QAAMG,MAAM,8BAAeP,OAAf,CAAZ;AACA,QAAI,CAACO,GAAD,IAAQ,CAAC,uBAAUA,GAAV,CAAb,EAA6B;AAC3B,aAAO,KAAP;AACD;;AAED;AACA;AACA,QAAI,CAACR,SAASS,mBAAV,KAAkC,CAACD,IAAIE,QAAL,IAAiB,CAACF,IAAIG,aAAtB,IAAuCH,IAAII,WAAJ,IAAmB,CAA1D,IAA+DJ,IAAIK,YAAJ,IAAoB,CAArH,CAAJ,EAA6H;AAC3H,aAAO,KAAP;AACD;;AAED;AACA,QAAI,CAACb,SAASc,oBAAV,IAAkC,CAACb,QAAQc,IAA/C,EAAqD;AACnD;AACA;AACA,aAAOf,SAASO,iBAAT,IAA8BF,WAA9B,IAA6CL,SAASgB,oBAAT,IAAiCR,IAAIF,YAAJ,CAAiB,UAAjB,CAArF;AACD;;AAED;AACA,QAAMW,qBAAqB,uBAAW,EAAClB,SAASS,GAAV,EAAX,EAA2BU,KAA3B,CAAiC,CAAjC,EAAoCC,IAApC,CAAyC,UAASC,QAAT,EAAmB;AACrF,UAAMC,OAAOD,SAASjB,QAAT,CAAkBC,WAAlB,EAAb;AACA,aAAOiB,SAAS,QAAT,IAAqBA,SAAS,GAArC;AACD,KAH0B,CAA3B;;AAKA,QAAIJ,kBAAJ,EAAwB;AACtB,aAAO,KAAP;AACD;;AAED,WAAO,IAAP;AACD,G;;;;;;;;;;;;;;;;AAvDD,MAAIjB,iBAAJ;;AAEA;AACA;AACA;;AAZA","file":"valid-area.js","sourcesContent":["\r\n// determine if an <area> element is being properly used by and <img> via a <map>\r\n\r\nimport contextToElement from '../util/context-to-element';\r\nimport isVisible from './visible';\r\nimport getParents from '../get/parents';\r\nimport {getImageOfArea} from '../util/image-map';\r\n\r\nimport _supports from '../supports/supports';\r\nlet supports;\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/HTML/Element/map\r\n// https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#attr-usemap\r\n// https://github.com/jquery/jquery-ui/blob/master/ui/core.js#L88-L107\r\nexport default function(context) {\r\n  if (!supports) {\r\n    supports = _supports();\r\n  }\r\n\r\n  const element = contextToElement({\r\n    label: 'is/valid-area',\r\n    context,\r\n  });\r\n\r\n  const nodeName = element.nodeName.toLowerCase();\r\n  if (nodeName !== 'area') {\r\n    return false;\r\n  }\r\n\r\n  const hasTabindex = element.hasAttribute('tabindex');\r\n  if (!supports.focusAreaTabindex && hasTabindex) {\r\n    // Blink and WebKit do not consider <area tabindex=\"-1\" href=\"#void\"> focusable\r\n    return false;\r\n  }\r\n\r\n  const img = getImageOfArea(element);\r\n  if (!img || !isVisible(img)) {\r\n    return false;\r\n  }\r\n\r\n  // Firefox only allows fully loaded images to reference image maps\r\n  // https://stereochro.me/ideas/detecting-broken-images-js\r\n  if (!supports.focusBrokenImageMap && (!img.complete || !img.naturalHeight || img.offsetWidth <= 0 || img.offsetHeight <= 0)) {\r\n    return false;\r\n  }\r\n\r\n  // Firefox supports.can focus area elements even if they don't have an href attribute\r\n  if (!supports.focusAreaWithoutHref && !element.href) {\r\n    // Internet explorer supports.can focus area elements without href if either\r\n    // the area element or the image element has a tabindex attribute\r\n    return supports.focusAreaTabindex && hasTabindex || supports.focusAreaImgTabindex && img.hasAttribute('tabindex');\r\n  }\r\n\r\n  // https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#attr-usemap\r\n  const childOfInteractive = getParents({context: img}).slice(1).some(function(_element) {\r\n    const name = _element.nodeName.toLowerCase();\r\n    return name === 'button' || name === 'a';\r\n  });\r\n\r\n  if (childOfInteractive) {\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n}\r\n"]}