{"version":3,"sources":["../../src/supports/supports-cache.js"],"names":["readLocalStorage","key","data","window","localStorage","getItem","JSON","parse","e","writeLocalStorage","value","document","hasFocus","removeItem","setItem","stringify","userAgent","navigator","cacheKey","cache","version","get","set","values","Object","keys","forEach","time","Date","toISOString"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAUA,WAASA,gBAAT,CAA0BC,GAA1B,EAA+B;AAC7B;AACA;AACA,QAAIC,aAAJ;;AAEA,QAAI;AACFA,aAAOC,OAAOC,YAAP,IAAuBD,OAAOC,YAAP,CAAoBC,OAApB,CAA4BJ,GAA5B,CAA9B;AACAC,aAAOA,OAAOI,KAAKC,KAAL,CAAWL,IAAX,CAAP,GAA0B,EAAjC;AACD,KAHD,CAGE,OAAOM,CAAP,EAAU;AACVN,aAAO,EAAP;AACD;;AAED,WAAOA,IAAP;AACD,G,CAvBD;;;;;;;;AAyBA,WAASO,iBAAT,CAA2BR,GAA3B,EAAgCS,KAAhC,EAAuC;AACrC,QAAI,CAACC,SAASC,QAAT,EAAL,EAA0B;AACxB;AACA;AACA;AACA,UAAI;AACFT,eAAOC,YAAP,IAAuBD,OAAOC,YAAP,CAAoBS,UAApB,CAA+BZ,GAA/B,CAAvB;AACD,OAFD,CAEE,OAAOO,CAAP,EAAU;AACV;AACD;;AAED;AACD;;AAED,QAAI;AACFL,aAAOC,YAAP,IAAuBD,OAAOC,YAAP,CAAoBU,OAApB,CAA4Bb,GAA5B,EAAiCK,KAAKS,SAAL,CAAeL,KAAf,CAAjC,CAAvB;AACD,KAFD,CAEE,OAAOF,CAAP,EAAU;AACV;AACD;AACF;;AAED,MAAMQ,YAAY,OAAOb,MAAP,KAAkB,WAAlB,IAAiCA,OAAOc,SAAP,CAAiBD,SAAlD,IAA+D,EAAjF;AACA,MAAME,WAAW,qBAAjB;AACA,MAAIC,QAAQnB,iBAAiBkB,QAAjB,CAAZ;;AAEA;AACA,MAAIC,MAAMH,SAAN,KAAoBA,SAApB,IAAiCG,MAAMC,OAAN,KAAkBA,iBAAvD,EAAgE;AAC9DD,YAAQ,EAAR;AACD;;AAEDA,QAAMH,SAAN,GAAkBA,SAAlB;AACAG,QAAMC,OAAN,GAAgBA,iBAAhB;;oBAEe;AACbC,SAAK,eAAW;AACd,aAAOF,KAAP;AACD,KAHY;AAIbG,SAAK,aAASC,MAAT,EAAiB;AACpBC,aAAOC,IAAP,CAAYF,MAAZ,EAAoBG,OAApB,CAA4B,UAASzB,GAAT,EAAc;AACxCkB,cAAMlB,GAAN,IAAasB,OAAOtB,GAAP,CAAb;AACD,OAFD;;AAIAkB,YAAMQ,IAAN,GAAa,IAAIC,IAAJ,GAAWC,WAAX,EAAb;AACApB,wBAAkBS,QAAlB,EAA4BC,KAA5B;AACD;AAXY,G","file":"supports-cache.js","sourcesContent":["/*\r\n    Facility to cache test results in localStorage.\r\n\r\n    USAGE:\r\n      cache.get('key');\r\n      cache.set('key', 'value');\r\n */\r\n\r\nimport version from '../version';\r\n\r\nfunction readLocalStorage(key) {\r\n  // allow reading from storage to retrieve previous support results\r\n  // even while the document does not have focus\r\n  let data;\r\n\r\n  try {\r\n    data = window.localStorage && window.localStorage.getItem(key);\r\n    data = data ? JSON.parse(data) : {};\r\n  } catch (e) {\r\n    data = {};\r\n  }\r\n\r\n  return data;\r\n}\r\n\r\nfunction writeLocalStorage(key, value) {\r\n  if (!document.hasFocus()) {\r\n    // if the document does not have focus when tests are executed, focus() may\r\n    // not be handled properly and events may not be dispatched immediately.\r\n    // This can happen when a document is reloaded while Developer Tools have focus.\r\n    try {\r\n      window.localStorage && window.localStorage.removeItem(key);\r\n    } catch (e) {\r\n      // ignore\r\n    }\r\n\r\n    return;\r\n  }\r\n\r\n  try {\r\n    window.localStorage && window.localStorage.setItem(key, JSON.stringify(value));\r\n  } catch (e) {\r\n    // ignore\r\n  }\r\n}\r\n\r\nconst userAgent = typeof window !== 'undefined' && window.navigator.userAgent || '';\r\nconst cacheKey = 'ally-supports-cache';\r\nlet cache = readLocalStorage(cacheKey);\r\n\r\n// update the cache if ally or the user agent changed (newer version, etc)\r\nif (cache.userAgent !== userAgent || cache.version !== version) {\r\n  cache = {};\r\n}\r\n\r\ncache.userAgent = userAgent;\r\ncache.version = version;\r\n\r\nexport default {\r\n  get: function() {\r\n    return cache;\r\n  },\r\n  set: function(values) {\r\n    Object.keys(values).forEach(function(key) {\r\n      cache[key] = values[key];\r\n    });\r\n\r\n    cache.time = new Date().toISOString();\r\n    writeLocalStorage(cacheKey, cache);\r\n  },\r\n};\r\n"]}