{"version":3,"sources":["../../src/fix/pointer-focus-parent.js"],"names":["engage","disengage","relevantToCurrentBrowser","platform","is","WEBKIT","handleBeforeFocusEvent","event","target","context","hasAttribute","setAttribute","window","setImmediate","setTimeout","removeAttribute","element","addEventListener","removeEventListener"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;;AAkBA,MAAIA,eAAJ;AACA,MAAIC,kBAAJ;AACA;AACA,MAAMC,2BAA2BC,mBAASC,EAAT,CAAYC,MAA7C;;AAEA,MAAI,CAACH,wBAAL,EAA+B;AAC7BF,aAAS,kBAAW,CAAE,CAAtB;AACD,GAFD,MAEO;AACL;AACA;AACA;AACA;AACA,QAAMM,yBAAyB,SAAzBA,sBAAyB,CAASC,KAAT,EAAgB;AAC7C;AACA,UAAMC,SAAS,2BAAe,EAACC,SAASF,MAAMC,MAAhB,EAAf,CAAf;AACA,UAAI,CAACA,MAAD,IAAWA,OAAOE,YAAP,CAAoB,UAApB,KAAmC,6BAAgBF,MAAhB,CAAlD,EAA2E;AACzE;AACA;AACD;;AAED;AACAA,aAAOG,YAAP,CAAoB,UAApB,EAAgC,CAAhC;;AAEA;AACA,OAACC,OAAOC,YAAP,IAAuBD,OAAOE,UAA/B,EAA2C,YAAW;AACpDN,eAAOO,eAAP,CAAuB,UAAvB;AACD,OAFD,EAEG,CAFH;AAGD,KAfD;;AAiBAf,aAAS,gBAASgB,OAAT,EAAkB;AACzBA,cAAQC,gBAAR,CAAyB,WAAzB,EAAsCX,sBAAtC,EAA8D,IAA9D;AACAU,cAAQC,gBAAR,CAAyB,YAAzB,EAAuCX,sBAAvC,EAA+D,IAA/D;AACD,KAHD;;AAKAL,gBAAY,mBAASe,OAAT,EAAkB;AAC5BA,cAAQE,mBAAR,CAA4B,WAA5B,EAAyCZ,sBAAzC,EAAiE,IAAjE;AACAU,cAAQE,mBAAR,CAA4B,YAA5B,EAA0CZ,sBAA1C,EAAkE,IAAlE;AACD,KAHD;AAID;;oBAEc,+BAAgB,EAAEN,cAAF,EAAUC,oBAAV,EAAhB,C","file":"pointer-focus-parent.js","sourcesContent":["/*\r\n  Clicking on a link that has a focusable element in its ancestry [tabindex=\"-1\"],\r\n  can lead to that parental element gaining focus, instead of the link.\r\n\r\n  Example:\r\n    <div tabindex=\"-1\">\r\n      <a href=\"#foo\">click me</a>\r\n    </div>\r\n\r\n  This (wrong) behavior was observed in Chrome 38, iOS8, Safari 6.2, WebKit r175131\r\n  It is not a problem in Firefox 33, Internet Explorer 11, Chrome 39.\r\n*/\r\n\r\nimport getFocusTarget from '../get/focus-target';\r\nimport isValidTabIndex from '../is/valid-tabindex';\r\nimport decorateContext from '../util/decorate-context';\r\nimport platform from '../util/platform';\r\n\r\nlet engage;\r\nlet disengage;\r\n// This fix is only relevant to WebKit\r\nconst relevantToCurrentBrowser = platform.is.WEBKIT;\r\n\r\nif (!relevantToCurrentBrowser) {\r\n  engage = function() {};\r\n} else {\r\n  // add [tabindex=\"0\"] to the (focusable) element that is about to be clicked\r\n  // if it does not already have an explicit tabindex (attribute).\r\n  // By applying an explicit tabindex, WebKit will not go look for\r\n  // the first valid tabindex in the element's parents.\r\n  const handleBeforeFocusEvent = function(event) {\r\n    // find the element that would receive focus\r\n    const target = getFocusTarget({context: event.target});\r\n    if (!target || target.hasAttribute('tabindex') && isValidTabIndex(target)) {\r\n      // there's nothing to focus, or the element already has tabindex, we're good\r\n      return;\r\n    }\r\n\r\n    // assign explicit tabindex, as implicit tabindex is the problem\r\n    target.setAttribute('tabindex', 0);\r\n\r\n    // add cleanup to the RunLoop\r\n    (window.setImmediate || window.setTimeout)(function() {\r\n      target.removeAttribute('tabindex');\r\n    }, 0);\r\n  };\r\n\r\n  engage = function(element) {\r\n    element.addEventListener('mousedown', handleBeforeFocusEvent, true);\r\n    element.addEventListener('touchstart', handleBeforeFocusEvent, true);\r\n  };\r\n\r\n  disengage = function(element) {\r\n    element.removeEventListener('mousedown', handleBeforeFocusEvent, true);\r\n    element.removeEventListener('touchstart', handleBeforeFocusEvent, true);\r\n  };\r\n}\r\n\r\nexport default decorateContext({ engage, disengage });\r\n"]}