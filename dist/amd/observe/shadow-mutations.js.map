{"version":3,"sources":["../../src/observe/shadow-mutations.js"],"names":["context","callback","config","TypeError","window","MutationObserver","disengage","element","label","resolveDocument","defaultToDocument","service","ShadowMutationObserver","shadowObserverConfig","childList","subtree","bind","clientObserver","hostObserver","mutations","forEach","handleHostMutation","observeContext","observeShadowHosts","disconnect","hosts","shadowRoot","observe","mutation","type","addedElements","addedNodes","filter","nodeType","Node","ELEMENT_NODE"],"mappings":";;;;;;;;;;;;;;;;;;;oBAqDe,YAIP;AAAA,oFAAJ,EAAI;AAAA,QAHNA,OAGM,SAHNA,OAGM;AAAA,QAFNC,QAEM,SAFNA,QAEM;AAAA,QADNC,MACM,SADNA,MACM;;AACN,QAAI,OAAOD,QAAP,KAAoB,UAAxB,EAAoC;AAClC,YAAM,IAAIE,SAAJ,CAAc,qEAAd,CAAN;AACD;;AAED,QAAI,QAAOD,MAAP,yCAAOA,MAAP,OAAkB,QAAtB,EAAgC;AAC9B,YAAM,IAAIC,SAAJ,CAAc,kEAAd,CAAN;AACD;;AAED,QAAI,CAACC,OAAOC,gBAAZ,EAA8B;AAC5B;AACA;AACA,aAAO;AACLC,mBAAW,qBAAW,CAAE;AADnB,OAAP;AAGD;;AAED,QAAMC,UAAU,gCAAiB;AAC/BC,aAAO,0BADwB;AAE/BC,uBAAiB,IAFc;AAG/BC,yBAAmB,IAHY;AAI/BV;AAJ+B,KAAjB,CAAhB;;AAOA,QAAMW,UAAU,IAAIC,sBAAJ,CAA2B;AACzCZ,eAASO,OADgC;AAEzCN,wBAFyC;AAGzCC;AAHyC,KAA3B,CAAhB;;AAMA,WAAO;AACLI,iBAAWK,QAAQL;AADd,KAAP;AAGD,G;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AArFD,MAAMO,uBAAuB;AAC3BC,eAAW,IADgB;AAE3BC,aAAS;AAFkB,GAA7B;;MAKMH,sB;AACJ,sCAA8C;AAAA;;AAAA,qFAAJ,EAAI;AAAA,UAAjCZ,OAAiC,QAAjCA,OAAiC;AAAA,UAAxBC,QAAwB,QAAxBA,QAAwB;AAAA,UAAdC,MAAc,QAAdA,MAAc;;AAAA;;AAC5C,WAAKA,MAAL,GAAcA,MAAd;;AAEA,WAAKI,SAAL,GAAiB,KAAKA,SAAL,CAAeU,IAAf,CAAoB,IAApB,CAAjB;;AAEA,WAAKC,cAAL,GAAsB,IAAIZ,gBAAJ,CAAqBJ,QAArB,CAAtB;AACA,WAAKiB,YAAL,GAAoB,IAAIb,gBAAJ,CAAqB;AAAA,eAAac,UAAUC,OAAV,CAAkB,MAAKC,kBAAvB,EAA2C,KAA3C,CAAb;AAAA,OAArB,CAApB;;AAEA,WAAKC,cAAL,CAAoBtB,OAApB;AACA,WAAKuB,kBAAL,CAAwBvB,OAAxB;AACD;;;;kCAEW;AACV,aAAKiB,cAAL,IAAuB,KAAKA,cAAL,CAAoBO,UAApB,EAAvB;AACA,aAAKP,cAAL,GAAsB,IAAtB;AACA,aAAKC,YAAL,IAAqB,KAAKA,YAAL,CAAkBM,UAAlB,EAArB;AACA,aAAKN,YAAL,GAAoB,IAApB;AACD;;;yCAEkBlB,O,EAAS;AAAA;;AAC1B,YAAMyB,QAAQ,2BAAiB;AAC7BzB;AAD6B,SAAjB,CAAd;;AAIAyB,cAAML,OAAN,CAAc;AAAA,iBAAW,OAAKE,cAAL,CAAoBf,QAAQmB,UAA5B,CAAX;AAAA,SAAd;AACD;;;qCAEc1B,O,EAAS;AACtB,aAAKiB,cAAL,CAAoBU,OAApB,CAA4B3B,OAA5B,EAAqC,KAAKE,MAA1C;AACA,aAAKgB,YAAL,CAAkBS,OAAlB,CAA0B3B,OAA1B,EAAmCa,oBAAnC;AACD;;;yCAEkBe,Q,EAAU;AAC3B,YAAIA,SAASC,IAAT,KAAkB,WAAtB,EAAmC;AACjC;AACD;;AAED,YAAMC,gBAAgB,yBAAUF,SAASG,UAAnB,EAA+BC,MAA/B,CAAsC;AAAA,iBAAWzB,QAAQ0B,QAAR,KAAqBC,KAAKC,YAArC;AAAA,SAAtC,CAAtB;AACAL,sBAAcV,OAAd,CAAsB,KAAKG,kBAA3B,EAA+C,IAA/C;AACD","file":"shadow-mutations.js","sourcesContent":["\r\nimport nodeArray from '../util/node-array';\r\nimport queryShadowHosts from '../query/shadow-hosts';\r\nimport contextToElement from '../util/context-to-element';\r\n\r\nconst shadowObserverConfig = {\r\n  childList: true,\r\n  subtree: true,\r\n};\r\n\r\nclass ShadowMutationObserver {\r\n  constructor({context, callback, config} = {}) {\r\n    this.config = config;\r\n\r\n    this.disengage = this.disengage.bind(this);\r\n\r\n    this.clientObserver = new MutationObserver(callback);\r\n    this.hostObserver = new MutationObserver(mutations => mutations.forEach(this.handleHostMutation, this));\r\n\r\n    this.observeContext(context);\r\n    this.observeShadowHosts(context);\r\n  }\r\n\r\n  disengage() {\r\n    this.clientObserver && this.clientObserver.disconnect();\r\n    this.clientObserver = null;\r\n    this.hostObserver && this.hostObserver.disconnect();\r\n    this.hostObserver = null;\r\n  }\r\n\r\n  observeShadowHosts(context) {\r\n    const hosts = queryShadowHosts({\r\n      context,\r\n    });\r\n\r\n    hosts.forEach(element => this.observeContext(element.shadowRoot));\r\n  }\r\n\r\n  observeContext(context) {\r\n    this.clientObserver.observe(context, this.config);\r\n    this.hostObserver.observe(context, shadowObserverConfig);\r\n  }\r\n\r\n  handleHostMutation(mutation) {\r\n    if (mutation.type !== 'childList') {\r\n      return;\r\n    }\r\n\r\n    const addedElements = nodeArray(mutation.addedNodes).filter(element => element.nodeType === Node.ELEMENT_NODE);\r\n    addedElements.forEach(this.observeShadowHosts, this);\r\n  }\r\n}\r\n\r\nexport default function({\r\n  context,\r\n  callback,\r\n  config,\r\n} = {}) {\r\n  if (typeof callback !== 'function') {\r\n    throw new TypeError('observe/shadow-mutations requires options.callback to be a function');\r\n  }\r\n\r\n  if (typeof config !== 'object') {\r\n    throw new TypeError('observe/shadow-mutations requires options.config to be an object');\r\n  }\r\n\r\n  if (!window.MutationObserver) {\r\n    // not supporting IE10 via Mutation Events, because they're too expensive\r\n    // https://developer.mozilla.org/en-US/docs/Web/Guide/Events/Mutation_events\r\n    return {\r\n      disengage: function() {},\r\n    };\r\n  }\r\n\r\n  const element = contextToElement({\r\n    label: 'observe/shadow-mutations',\r\n    resolveDocument: true,\r\n    defaultToDocument: true,\r\n    context,\r\n  });\r\n\r\n  const service = new ShadowMutationObserver({\r\n    context: element,\r\n    callback,\r\n    config,\r\n  });\r\n\r\n  return {\r\n    disengage: service.disengage,\r\n  };\r\n}\r\n"]}