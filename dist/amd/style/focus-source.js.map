{"version":3,"sources":["../../src/style/focus-source.js"],"names":["supportsFocusIn","document","focusEventName","blurEventName","interactionTypeHandler","shadowHandle","current","lock","used","pointer","key","script","initial","handleFocusEvent","event","source","type","interactionType","get","documentElement","setAttribute","getCurrentFocusSource","getUsedFocusSource","lockFocusSource","unlockFocusSource","disengage","Object","keys","forEach","removeEventListener","removeAttribute","engage","addEventListener","unlock"],"mappings":"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","file":"focus-source.js","sourcesContent":["\r\n/*\r\n  add data-focus-source attribute to html element containing \"key\", \"pointer\" or \"script\"\r\n  depending on the input method used to change focus.\r\n\r\n  USAGE:\r\n    style/focus-source()\r\n\r\n    body :focus {\r\n      outline: 1px solid grey;\r\n    }\r\n\r\n    html[data-focus-source=\"key\"] body :focus {\r\n      outline: 5px solid red;\r\n    }\r\n\r\n    html[data-focus-source=\"key\"] body :focus {\r\n      outline: 1px solid blue;\r\n    }\r\n\r\n  NOTE: I don't have a GamePad to test, if you do and you want to\r\n  implement an observer for https://w3c.github.io/gamepad/ - send a PR!\r\n\r\n  Alternate implementation: https://github.com/alice/modality\r\n*/\r\n\r\nimport { addClass, removeClass } from '../util/toggle-class';\r\nimport shadowFocus from '../event/shadow-focus';\r\nimport engageInteractionTypeObserver from '../observe/interaction-type';\r\nimport decorateService from '../util/decorate-service';\r\n\r\n// preferring focusin/out because they are synchronous in IE10+11\r\nconst supportsFocusIn = typeof document !== 'undefined' && 'onfocusin' in document;\r\nconst focusEventName = supportsFocusIn ? 'focusin' : 'focus';\r\nconst blurEventName = supportsFocusIn ? 'focusout' : 'blur';\r\n\r\n// interface to read interaction-type-listener state\r\nlet interactionTypeHandler;\r\nlet shadowHandle;\r\n// keep track of last focus source\r\nlet current = null;\r\n// overwrite focus source for use with the every upcoming focus event\r\nlet lock = null;\r\n// keep track of ever having used a particular input method to change focus\r\nconst used = {\r\n  pointer: false,\r\n  key: false,\r\n  script: false,\r\n  initial: false,\r\n};\r\n\r\nfunction handleFocusEvent(event) {\r\n  let source = '';\r\n  if (event.type === focusEventName || event.type === 'shadow-focus') {\r\n    const interactionType = interactionTypeHandler.get();\r\n    source = lock\r\n      || interactionType.pointer && 'pointer'\r\n      || interactionType.key && 'key'\r\n      || 'script';\r\n  } else if (event.type === 'initial') {\r\n    source = 'initial';\r\n  }\r\n\r\n  document.documentElement.setAttribute('data-focus-source', source);\r\n\r\n  if (event.type !== blurEventName) {\r\n    if (!used[source]) {\r\n      addClass(document.documentElement, 'focus-source-' + source);\r\n    }\r\n\r\n    used[source] = true;\r\n    current = source;\r\n  }\r\n}\r\n\r\nfunction getCurrentFocusSource() {\r\n  return current;\r\n}\r\n\r\nfunction getUsedFocusSource(source) {\r\n  return used[source];\r\n}\r\n\r\nfunction lockFocusSource(source) {\r\n  lock = source;\r\n}\r\n\r\nfunction unlockFocusSource() {\r\n  lock = false;\r\n}\r\n\r\nfunction disengage() {\r\n  // clear dom state\r\n  handleFocusEvent({type: blurEventName});\r\n  current = lock = null;\r\n  Object.keys(used).forEach(function(key) {\r\n    removeClass(document.documentElement, 'focus-source-' + key);\r\n    used[key] = false;\r\n  });\r\n  // kill interaction type identification listener\r\n  interactionTypeHandler.disengage();\r\n  // kill shadow-focus event dispatcher\r\n  shadowHandle && shadowHandle.disengage();\r\n  document.removeEventListener('shadow-focus', handleFocusEvent, true);\r\n  document.documentElement.removeEventListener(focusEventName, handleFocusEvent, true);\r\n  document.documentElement.removeEventListener(blurEventName, handleFocusEvent, true);\r\n  document.documentElement.removeAttribute('data-focus-source');\r\n}\r\n\r\nfunction engage() {\r\n  // enable the shadow-focus event dispatcher\r\n  shadowHandle = shadowFocus();\r\n  // handlers to modify the focused element\r\n  document.addEventListener('shadow-focus', handleFocusEvent, true);\r\n  document.documentElement.addEventListener(focusEventName, handleFocusEvent, true);\r\n  document.documentElement.addEventListener(blurEventName, handleFocusEvent, true);\r\n  // enable the interaction type identification observer\r\n  interactionTypeHandler = engageInteractionTypeObserver();\r\n  // set up initial dom state\r\n  handleFocusEvent({type: 'initial'});\r\n\r\n  return {\r\n    used: getUsedFocusSource,\r\n    current: getCurrentFocusSource,\r\n    lock: lockFocusSource,\r\n    unlock: unlockFocusSource,\r\n  };\r\n}\r\n\r\nexport default decorateService({ engage, disengage });\r\n"]}