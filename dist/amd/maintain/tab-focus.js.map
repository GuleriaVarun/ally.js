{"version":3,"sources":["../../src/maintain/tab-focus.js"],"names":["context","document","documentElement","event","preventDefault","sequence","backward","shiftKey","first","last","length","source","target","focus","currentIndex","found","some","element","index","offset"],"mappings":";;;;;;;;;;;;;;;;;;;oBAKe,YAA2B;AAAA,mFAAJ,EAAI;AAAA,QAAhBA,OAAgB,QAAhBA,OAAgB;;AACxC,QAAI,CAACA,OAAL,EAAc;AACZA,gBAAUC,SAASC,eAAnB;AACD;;AAED;AACA;AACA;AACA;;AAEA,WAAO,mBAAQ;AACb;AACA;AACA,yBAAmB,qBAASC,KAAT,EAAgB;AACjC;AACAA,cAAMC,cAAN;;AAEA,YAAMC,WAAW,2BAAiB;AAChCL;AADgC,SAAjB,CAAjB;;AAIA,YAAMM,WAAWH,MAAMI,QAAvB;AACA,YAAMC,QAAQH,SAAS,CAAT,CAAd;AACA,YAAMI,OAAOJ,SAASA,SAASK,MAAT,GAAkB,CAA3B,CAAb;;AAEA;AACA,YAAMC,SAASL,WAAWE,KAAX,GAAmBC,IAAlC;AACA,YAAMG,SAASN,WAAWG,IAAX,GAAkBD,KAAjC;AACA,YAAI,6BAAgBG,MAAhB,CAAJ,EAA6B;AAC3BC,iBAAOC,KAAP;AACA;AACD;;AAED;AACA,YAAIC,qBAAJ;AACA,YAAMC,QAAQV,SAASW,IAAT,CAAc,UAASC,OAAT,EAAkBC,KAAlB,EAAyB;AACnD,cAAI,CAAC,6BAAgBD,OAAhB,CAAL,EAA+B;AAC7B,mBAAO,KAAP;AACD;;AAEDH,yBAAeI,KAAf;AACA,iBAAO,IAAP;AACD,SAPa,CAAd;;AASA,YAAI,CAACH,KAAL,EAAY;AACV;AACAP,gBAAMK,KAAN;AACA;AACD;;AAED;AACA,YAAMM,SAASb,WAAW,CAAC,CAAZ,GAAgB,CAA/B;AACAD,iBAASS,eAAeK,MAAxB,EAAgCN,KAAhC;AACD;AA3CY,KAAR,CAAP;AA6CD,G","file":"tab-focus.js","sourcesContent":["\r\nimport isActiveElement from '../is/active-element';\r\nimport queryTabsequence from '../query/tabsequence';\r\nimport whenKey from '../when/key';\r\n\r\nexport default function({ context } = {}) {\r\n  if (!context) {\r\n    context = document.documentElement;\r\n  }\r\n\r\n  // Make sure the supports tests are run before intercepting the Tab key,\r\n  // or IE10 and IE11 will fail to process the first Tab key event. Not\r\n  // limiting this warm-up to IE because it may be a problem elsewhere, too.\r\n  queryTabsequence();\r\n\r\n  return whenKey({\r\n    // Safari on OSX may require ALT+TAB to reach links,\r\n    // see https://github.com/medialize/ally.js/issues/146\r\n    '?alt+?shift+tab': function(event) {\r\n      // we're completely taking over the Tab key handling\r\n      event.preventDefault();\r\n\r\n      const sequence = queryTabsequence({\r\n        context,\r\n      });\r\n\r\n      const backward = event.shiftKey;\r\n      const first = sequence[0];\r\n      const last = sequence[sequence.length - 1];\r\n\r\n      // wrap around first to last, last to first\r\n      const source = backward ? first : last;\r\n      const target = backward ? last : first;\r\n      if (isActiveElement(source)) {\r\n        target.focus();\r\n        return;\r\n      }\r\n\r\n      // find current position in tabsequence\r\n      let currentIndex;\r\n      const found = sequence.some(function(element, index) {\r\n        if (!isActiveElement(element)) {\r\n          return false;\r\n        }\r\n\r\n        currentIndex = index;\r\n        return true;\r\n      });\r\n\r\n      if (!found) {\r\n        // redirect to first as we're not in our tabsequence\r\n        first.focus();\r\n        return;\r\n      }\r\n\r\n      // shift focus to previous/next element in the sequence\r\n      const offset = backward ? -1 : 1;\r\n      sequence[currentIndex + offset].focus();\r\n    },\r\n  });\r\n}\r\n"]}