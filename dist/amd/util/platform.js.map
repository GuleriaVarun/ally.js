{"version":3,"sources":["../../src/util/platform.js"],"names":["platform","JSON","parse","stringify","_platform","os","family","ANDROID","WINDOWS","slice","OSX","IOS","BLINK","layout","GECKO","TRIDENT","EDGE","WEBKIT","version","parseFloat","majorVersion","Math","floor","is","IE9","IE10","IE11"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAQA;AACA,MAAMA,WAAWC,KAAKC,KAAL,CAAWD,KAAKE,SAAL,CAAeC,kBAAf,CAAX,CAAjB;;AAEA;;AAVA;AACA;AACA;AACA;;AAQA,MAAMC,KAAKL,SAASK,EAAT,CAAYC,MAAZ,IAAsB,EAAjC;AACA,MAAMC,UAAUF,OAAO,SAAvB;AACA,MAAMG,UAAUH,GAAGI,KAAH,CAAS,CAAT,EAAY,CAAZ,MAAmB,SAAnC;AACA,MAAMC,MAAML,OAAO,MAAnB;AACA,MAAMM,MAAMN,OAAO,KAAnB;;AAEA;AACA,MAAMO,QAAQZ,SAASa,MAAT,KAAoB,OAAlC;AACA,MAAMC,QAAQd,SAASa,MAAT,KAAoB,OAAlC;AACA,MAAME,UAAUf,SAASa,MAAT,KAAoB,SAApC;AACA,MAAMG,OAAOhB,SAASa,MAAT,KAAoB,UAAjC;AACA,MAAMI,SAASjB,SAASa,MAAT,KAAoB,QAAnC;;AAEA;AACA,MAAMK,UAAUC,WAAWnB,SAASkB,OAApB,CAAhB;AACA,MAAME,eAAeC,KAAKC,KAAL,CAAWJ,OAAX,CAArB;AACAlB,WAASoB,YAAT,GAAwBA,YAAxB;;AAEApB,WAASuB,EAAT,GAAc;AACZ;AACAhB,oBAFY;AAGZC,oBAHY;AAIZE,YAJY;AAKZC,YALY;AAMZ;AACAC,gBAPY,EAOL;AACPE,gBARY,EAQL;AACPC,oBATY,EASH;AACTC,cAVY,EAUN;AACNC,kBAXY,EAWJ;AACR;AACAO,SAAKT,WAAWK,iBAAiB,CAbrB;AAcZK,UAAMV,WAAWK,iBAAiB,EAdtB;AAeZM,UAAMX,WAAWK,iBAAiB;AAftB,GAAd;;oBAkBepB,Q","file":"platform.js","sourcesContent":["\r\n// sugar for https://github.com/bestiejs/platform.js\r\n// make sure to ALWAYS reference the layout engine,\r\n// even if it is not necessary for the condition,\r\n// as this makes grepping for this stuff simpler\r\n\r\nimport _platform from 'platform';\r\n\r\n// deep clone of original platform\r\nconst platform = JSON.parse(JSON.stringify(_platform));\r\n\r\n// operating system\r\nconst os = platform.os.family || '';\r\nconst ANDROID = os === 'Android';\r\nconst WINDOWS = os.slice(0, 7) === 'Windows';\r\nconst OSX = os === 'OS X';\r\nconst IOS = os === 'iOS';\r\n\r\n// layout\r\nconst BLINK = platform.layout === 'Blink';\r\nconst GECKO = platform.layout === 'Gecko';\r\nconst TRIDENT = platform.layout === 'Trident';\r\nconst EDGE = platform.layout === 'EdgeHTML';\r\nconst WEBKIT = platform.layout === 'WebKit';\r\n\r\n// browser version (not layout engine version!)\r\nconst version = parseFloat(platform.version);\r\nconst majorVersion = Math.floor(version);\r\nplatform.majorVersion = majorVersion;\r\n\r\nplatform.is = {\r\n  // operating system\r\n  ANDROID,\r\n  WINDOWS,\r\n  OSX,\r\n  IOS,\r\n  // layout\r\n  BLINK, // \"Chrome\", \"Chrome Mobile\", \"Opera\"\r\n  GECKO, // \"Firefox\"\r\n  TRIDENT, // \"Internet Explorer\"\r\n  EDGE, // \"Microsoft Edge\"\r\n  WEBKIT, // \"Safari\"\r\n  // INTERNET EXPLORERS\r\n  IE9: TRIDENT && majorVersion === 9,\r\n  IE10: TRIDENT && majorVersion === 10,\r\n  IE11: TRIDENT && majorVersion === 11,\r\n};\r\n\r\nexport default platform;\r\n"]}