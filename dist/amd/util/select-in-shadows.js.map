{"version":3,"sources":["../../src/util/select-in-shadows.js"],"names":["selector","shadowPrefix","operator","replace","split","join"],"mappings":";;;;;;;;;;;;;;;;;;;oBAQe,UAASA,QAAT,EAAmB;AAChC,QAAI,OAAOC,YAAP,KAAwB,QAA5B,EAAsC;AACpC,UAAMC,WAAW,gDAAjB;AACA,UAAIA,QAAJ,EAAc;AACZD,uBAAe,YAAYC,QAAZ,GAAuB,GAAtC;AACD;AACF;;AAED,QAAI,CAACD,YAAL,EAAmB;AACjB,aAAOD,QAAP;AACD;;AAED,WAAOA,WAAWC,YAAX,GAA0BD,SAASG,OAAT,CAAiB,UAAjB,EAA6B,GAA7B,EAAkCC,KAAlC,CAAwC,GAAxC,EAA6CC,IAA7C,CAAkDJ,YAAlD,CAAjC;AACD,G;;;;;;;;;;AAfD,MAAIA,qBAAJ;AALA;AACA","file":"select-in-shadows.js","sourcesContent":["\r\n// convert a CSS selector so that it also pierces ShadowDOM\r\n// takes \".a, #b\" and turns it into \".a, #b, html >>> .a, html >>> #b\"\r\n\r\nimport cssShadowPiercingDeepCombinator from '../supports/css-shadow-piercing-deep-combinator';\r\n\r\nlet shadowPrefix;\r\n\r\nexport default function(selector) {\r\n  if (typeof shadowPrefix !== 'string') {\r\n    const operator = cssShadowPiercingDeepCombinator();\r\n    if (operator) {\r\n      shadowPrefix = ', html ' + operator + ' ';\r\n    }\r\n  }\r\n\r\n  if (!shadowPrefix) {\r\n    return selector;\r\n  }\r\n\r\n  return selector + shadowPrefix + selector.replace(/\\s*,\\s*/g, ',').split(',').join(shadowPrefix);\r\n}\r\n"]}