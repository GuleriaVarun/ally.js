{"version":3,"sources":["../../src/get/parents.js"],"names":["context","list","element","label","push","parentNode","nodeType","Node","ELEMENT_NODE"],"mappings":";;;;;;;;;;;;;;;;;;;oBAKe,YAAyB;AAAA,mFAAJ,EAAI;AAAA,QAAfA,OAAe,QAAfA,OAAe;;AACtC,QAAMC,OAAO,EAAb;AACA,QAAIC,UAAU,gCAAiB;AAC7BC,aAAO,aADsB;AAE7BH;AAF6B,KAAjB,CAAd;;AAKA,WAAOE,OAAP,EAAgB;AACdD,WAAKG,IAAL,CAAUF,OAAV;AACA;AACAA,gBAAUA,QAAQG,UAAlB;AACA,UAAIH,WAAWA,QAAQI,QAAR,KAAqBC,KAAKC,YAAzC,EAAuD;AACrDN,kBAAU,IAAV;AACD;AACF;;AAED,WAAOD,IAAP;AACD,G","file":"parents.js","sourcesContent":["\r\nimport contextToElement from '../util/context-to-element';\r\n\r\n// [elem, elem.parent, elem.parent.parent, â€¦, html]\r\n// will not contain the shadowRoot (DOCUMENT_FRAGMENT_NODE) and shadowHost\r\nexport default function({context} = {}) {\r\n  const list = [];\r\n  let element = contextToElement({\r\n    label: 'get/parents',\r\n    context,\r\n  });\r\n\r\n  while (element) {\r\n    list.push(element);\r\n    // IE does know support parentElement on SVGElement\r\n    element = element.parentNode;\r\n    if (element && element.nodeType !== Node.ELEMENT_NODE) {\r\n      element = null;\r\n    }\r\n  }\r\n\r\n  return list;\r\n}\r\n"]}