{"version":3,"sources":["../../src/util/select-in-shadows.js"],"names":["cssShadowPiercingDeepCombinator","shadowPrefix","selector","operator","replace","split","join"],"mappings":";AACA;AACA;;AAEA,OAAOA,+BAAP,MAA4C,iDAA5C;;AAEA,IAAIC,qBAAJ;;AAEA,eAAe,UAASC,QAAT,EAAmB;AAChC,MAAI,OAAOD,YAAP,KAAwB,QAA5B,EAAsC;AACpC,QAAME,WAAWH,iCAAjB;AACA,QAAIG,QAAJ,EAAc;AACZF,qBAAe,YAAYE,QAAZ,GAAuB,GAAtC;AACD;AACF;;AAED,MAAI,CAACF,YAAL,EAAmB;AACjB,WAAOC,QAAP;AACD;;AAED,SAAOA,WAAWD,YAAX,GAA0BC,SAASE,OAAT,CAAiB,UAAjB,EAA6B,GAA7B,EAAkCC,KAAlC,CAAwC,GAAxC,EAA6CC,IAA7C,CAAkDL,YAAlD,CAAjC;AACD","file":"select-in-shadows.js","sourcesContent":["\r\n// convert a CSS selector so that it also pierces ShadowDOM\r\n// takes \".a, #b\" and turns it into \".a, #b, html >>> .a, html >>> #b\"\r\n\r\nimport cssShadowPiercingDeepCombinator from '../supports/css-shadow-piercing-deep-combinator';\r\n\r\nlet shadowPrefix;\r\n\r\nexport default function(selector) {\r\n  if (typeof shadowPrefix !== 'string') {\r\n    const operator = cssShadowPiercingDeepCombinator();\r\n    if (operator) {\r\n      shadowPrefix = ', html ' + operator + ' ';\r\n    }\r\n  }\r\n\r\n  if (!shadowPrefix) {\r\n    return selector;\r\n  }\r\n\r\n  return selector + shadowPrefix + selector.replace(/\\s*,\\s*/g, ',').split(',').join(shadowPrefix);\r\n}\r\n"]}