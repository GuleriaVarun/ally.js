{"version":3,"sources":["../../src/is/focus-relevant.js"],"names":["getParents","contextToElement","elementMatches","tabindexValue","isValidTabindex","hasCssOverflowScroll","hasCssDisplayFlex","isScrollableContainer","isUserModifyWritable","_supports","supports","isFocusRelevantRules","context","except","flexbox","scrollable","shadow","element","label","resolveDocument","shadowRoot","nodeName","toLowerCase","type","focusRedirectLegend","hasAttribute","svgType","getAttribute","focusObjectSvg","focusObjectSwf","focusAudioWithoutControls","focusVideoWithoutControls","focusSummary","validTabindex","focusImgUsemapTabindex","focusRedirectImgUsemap","focusTable","focusFieldset","isSvgElement","isSvgContent","ownerSVGElement","focusableAttribute","tabindex","focusSvgUseTabindex","focusSvgForeignobjectTabindex","focus","focusSvgNegativeTabindexAttribute","focusSvg","focusSvgInIframe","Boolean","focusSvgFocusableAttribute","focusSvgTabindexAttribute","style","window","getComputedStyle","focusImgIsmap","hasLinkParent","some","parent","focusScrollContainer","focusScrollContainerWithoutOverflow","focusFlexboxContainer","parentElement","parentNodeName","parentStyle","focusScrollBody","focusChildrenOfFocusableFlexbox","isFocusRelevant","rules"],"mappings":";AACA;AACA;AACA;;AAEA,OAAOA,UAAP,MAAuB,gBAAvB;AACA,OAAOC,gBAAP,MAA6B,4BAA7B;AACA,OAAOC,cAAP,MAA2B,yBAA3B;AACA,OAAOC,aAAP,MAA0B,wBAA1B;AACA,OAAOC,eAAP,MAA4B,kBAA5B;AACA,SACEC,oBADF,EAEEC,iBAFF,EAGEC,qBAHF,EAIEC,oBAJF,QAKO,WALP;;AAOA,OAAOC,SAAP,MAAsB,sBAAtB;AACA,IAAIC,iBAAJ;;AAEA,SAASC,oBAAT,GAOQ;AAAA,iFAAJ,EAAI;AAAA,MANNC,OAMM,QANNA,OAMM;AAAA,yBALNC,MAKM;AAAA,MALNA,MAKM,+BALG;AACPC,aAAS,KADF;AAEPC,gBAAY,KAFL;AAGPC,YAAQ;AAHD,GAKH;;AACN,MAAI,CAACN,QAAL,EAAe;AACbA,eAAWD,WAAX;AACD;;AAED,MAAMQ,UAAUhB,iBAAiB;AAC/BiB,WAAO,mBADwB;AAE/BC,qBAAiB,IAFc;AAG/BP;AAH+B,GAAjB,CAAhB;;AAMA,MAAI,CAACC,OAAOG,MAAR,IAAkBC,QAAQG,UAA9B,EAA0C;AACxC;AACA,WAAO,IAAP;AACD;;AAED,MAAMC,WAAWJ,QAAQI,QAAR,CAAiBC,WAAjB,EAAjB;;AAEA,MAAID,aAAa,OAAb,IAAwBJ,QAAQM,IAAR,KAAiB,QAA7C,EAAuD;AACrD;AACA,WAAO,KAAP;AACD;;AAED,MAAIF,aAAa,OAAb,IAAwBA,aAAa,QAArC,IAAiDA,aAAa,QAA9D,IAA0EA,aAAa,UAA3F,EAAuG;AACrG,WAAO,IAAP;AACD;;AAED,MAAIA,aAAa,QAAb,IAAyBX,SAASc,mBAAtC,EAA2D;AACzD;AACA,WAAO,IAAP;AACD;;AAED,MAAIH,aAAa,OAAjB,EAA0B;AACxB;AACA,WAAO,IAAP;AACD;;AAED,MAAIA,aAAa,MAAjB,EAAyB;AACvB;AACA,WAAO,IAAP;AACD;;AAED,MAAIA,aAAa,GAAb,IAAoBJ,QAAQQ,YAAR,CAAqB,MAArB,CAAxB,EAAsD;AACpD,WAAO,IAAP;AACD;;AAED,MAAIJ,aAAa,QAAb,IAAyBJ,QAAQQ,YAAR,CAAqB,QAArB,CAA7B,EAA6D;AAC3D;AACA,WAAO,KAAP;AACD;;AAED,MAAIJ,aAAa,QAAjB,EAA2B;AACzB,QAAMK,UAAUT,QAAQU,YAAR,CAAqB,MAArB,CAAhB;AACA,QAAI,CAACjB,SAASkB,cAAV,IAA4BF,YAAY,eAA5C,EAA6D;AAC3D;AACA,aAAO,KAAP;AACD,KAHD,MAGO,IAAI,CAAChB,SAASmB,cAAV,IAA4BH,YAAY,+BAA5C,EAA6E;AAClF;AACA,aAAO,KAAP;AACD;AACF;;AAED,MAAIL,aAAa,QAAb,IAAyBA,aAAa,QAA1C,EAAoD;AAClD;AACA,WAAO,IAAP;AACD;;AAED,MAAIA,aAAa,OAAb,IAAwBA,aAAa,QAAzC,EAAmD;AACjD;AACA;AACA,WAAO,IAAP;AACD;;AAED,MAAIJ,QAAQQ,YAAR,CAAqB,iBAArB,CAAJ,EAA6C;AAC3C;AACA,WAAO,IAAP;AACD;;AAED,MAAIJ,aAAa,OAAb,KAAyBX,SAASoB,yBAAT,IAAsCb,QAAQQ,YAAR,CAAqB,UAArB,CAA/D,CAAJ,EAAsG;AACpG,WAAO,IAAP;AACD;;AAED,MAAIJ,aAAa,OAAb,KAAyBX,SAASqB,yBAAT,IAAsCd,QAAQQ,YAAR,CAAqB,UAArB,CAA/D,CAAJ,EAAsG;AACpG,WAAO,IAAP;AACD;;AAED,MAAIf,SAASsB,YAAT,IAAyBX,aAAa,SAA1C,EAAqD;AACnD,WAAO,IAAP;AACD;;AAED,MAAMY,gBAAgB7B,gBAAgBa,OAAhB,CAAtB;;AAEA,MAAII,aAAa,KAAb,IAAsBJ,QAAQQ,YAAR,CAAqB,QAArB,CAA1B,EAA0D;AACxD;AACA;AACA,WAAOQ,iBAAiBvB,SAASwB,sBAA1B,IAAoDxB,SAASyB,sBAApE;AACD;;AAED,MAAIzB,SAAS0B,UAAT,KAAwBf,aAAa,OAAb,IAAwBA,aAAa,IAA7D,CAAJ,EAAwE;AACtE;AACA,WAAO,IAAP;AACD;;AAED,MAAIX,SAAS2B,aAAT,IAA0BhB,aAAa,UAA3C,EAAuD;AACrD;AACA,WAAO,IAAP;AACD;;AAED,MAAMiB,eAAejB,aAAa,KAAlC;AACA,MAAMkB,eAAetB,QAAQuB,eAA7B;AACA,MAAMC,qBAAqBxB,QAAQU,YAAR,CAAqB,WAArB,CAA3B;AACA,MAAMe,WAAWvC,cAAcc,OAAd,CAAjB;;AAEA,MAAII,aAAa,KAAb,IAAsBqB,aAAa,IAAnC,IAA2C,CAAChC,SAASiC,mBAAzD,EAA8E;AAC5E;AACA,WAAO,KAAP;AACD;;AAED,MAAItB,aAAa,eAAjB,EAAkC;AAChC;AACA,WAAOqB,aAAa,IAAb,IAAqBhC,SAASkC,6BAArC;AACD;;AAED,MAAI1C,eAAee,OAAf,EAAwB,OAAxB,KAAoCA,QAAQQ,YAAR,CAAqB,YAArB,CAAxC,EAA4E;AAC1E,WAAO,IAAP;AACD;;AAED,MAAI,CAACa,gBAAgBC,YAAjB,KAAkCtB,QAAQ4B,KAA1C,IAAmD,CAACnC,SAASoC,iCAA7D,IAAkGJ,WAAW,CAAjH,EAAoH;AAClH;AACA;AACA;AACA,WAAO,KAAP;AACD;;AAED,MAAIJ,YAAJ,EAAkB;AAChB,WAAOL,iBAAiBvB,SAASqC,QAA1B,IAAsCrC,SAASsC;AACpD;AADK,OAEFC,QAAQvC,SAASwC,0BAAT,IAAuCT,kBAAvC,IAA6DA,uBAAuB,MAA5F,CAFL;AAGD;;AAED,MAAIF,YAAJ,EAAkB;AAChB,QAAI7B,SAASyC,yBAAT,IAAsClB,aAA1C,EAAyD;AACvD,aAAO,IAAP;AACD;;AAED,QAAIvB,SAASwC,0BAAb,EAAyC;AACvC;AACA,aAAOT,uBAAuB,MAA9B;AACD;AACF;;AAED;AACA,MAAIR,aAAJ,EAAmB;AACjB,WAAO,IAAP;AACD;;AAED,MAAMmB,QAAQC,OAAOC,gBAAP,CAAwBrC,OAAxB,EAAiC,IAAjC,CAAd;AACA,MAAIT,qBAAqB4C,KAArB,CAAJ,EAAiC;AAC/B,WAAO,IAAP;AACD;;AAED,MAAI1C,SAAS6C,aAAT,IAA0BlC,aAAa,KAAvC,IAAgDJ,QAAQQ,YAAR,CAAqB,OAArB,CAApD,EAAmF;AACjF;AACA;AACA,QAAM+B,gBAAgBxD,WAAW,EAACY,SAASK,OAAV,EAAX,EAA+BwC,IAA/B,CACpB;AAAA,aAAUC,OAAOrC,QAAP,CAAgBC,WAAhB,OAAkC,GAAlC,IAAyCoC,OAAOjC,YAAP,CAAoB,MAApB,CAAnD;AAAA,KADoB,CAAtB;;AAIA,QAAI+B,aAAJ,EAAmB;AACjB,aAAO,IAAP;AACD;AACF;;AAED;AACA,MAAI,CAAC3C,OAAOE,UAAR,IAAsBL,SAASiD,oBAAnC,EAAyD;AACvD,QAAIjD,SAASkD,mCAAb,EAAkD;AAChD;AACA;AACA;AACA,UAAIrD,sBAAsBU,OAAtB,EAA+BI,QAA/B,CAAJ,EAA8C;AAC5C,eAAO,IAAP;AACD;AACF,KAPD,MAOO,IAAIhB,qBAAqB+C,KAArB,CAAJ,EAAiC;AACtC;AACA;AACA,aAAO,IAAP;AACD;AACF;;AAED,MAAI,CAACvC,OAAOC,OAAR,IAAmBJ,SAASmD,qBAA5B,IAAqDvD,kBAAkB8C,KAAlB,CAAzD,EAAmF;AACjF;AACA,WAAO,IAAP;AACD;;AAED,MAAMM,SAASzC,QAAQ6C,aAAvB;AACA,MAAI,CAACjD,OAAOE,UAAR,IAAsB2C,MAA1B,EAAkC;AAChC,QAAMK,iBAAiBL,OAAOrC,QAAP,CAAgBC,WAAhB,EAAvB;AACA,QAAM0C,cAAcX,OAAOC,gBAAP,CAAwBI,MAAxB,EAAgC,IAAhC,CAApB;AACA,QAAIhD,SAASuD,eAAT,IAA4B1D,sBAAsBmD,MAAtB,EAA8BrC,QAA9B,EAAwC0C,cAAxC,EAAwDC,WAAxD,CAAhC,EAAsG;AACpG;AACA;AACA,aAAO,IAAP;AACD;;AAED;AACA,QAAItD,SAASwD,+BAAb,EAA8C;AAC5C,UAAI5D,kBAAkB0D,WAAlB,CAAJ,EAAoC;AAClC,eAAO,IAAP;AACD;AACF;AACF;;AAED;AACA;AACA;;AAEA,SAAO,KAAP;AACD;;AAED;AACArD,qBAAqBE,MAArB,GAA8B,YAAsB;AAAA,MAAbA,MAAa,uEAAJ,EAAI;;AAClD,MAAMsD,kBAAkB,SAAlBA,eAAkB,CAASvD,OAAT,EAAkB;AACxC,WAAOD,qBAAqB;AAC1BC,sBAD0B;AAE1BC;AAF0B,KAArB,CAAP;AAID,GALD;;AAOAsD,kBAAgBC,KAAhB,GAAwBzD,oBAAxB;AACA,SAAOwD,eAAP;AACD,CAVD;;AAYA;AACA,IAAMA,kBAAkBxD,qBAAqBE,MAArB,CAA4B,EAA5B,CAAxB;AACA,eAAesD,eAAf","file":"focus-relevant.js","sourcesContent":["\r\n// determine if an element supports.can be focused by script regardless\r\n// of the element actually being focusable at the time of execution\r\n// i.e. <input disabled> is conisdered focus-relevant, but not focusable\r\n\r\nimport getParents from '../get/parents';\r\nimport contextToElement from '../util/context-to-element';\r\nimport elementMatches from '../util/element-matches';\r\nimport tabindexValue from '../util/tabindex-value';\r\nimport isValidTabindex from './valid-tabindex';\r\nimport {\r\n  hasCssOverflowScroll,\r\n  hasCssDisplayFlex,\r\n  isScrollableContainer,\r\n  isUserModifyWritable,\r\n} from './is.util';\r\n\r\nimport _supports from '../supports/supports';\r\nlet supports;\r\n\r\nfunction isFocusRelevantRules({\r\n  context,\r\n  except = {\r\n    flexbox: false,\r\n    scrollable: false,\r\n    shadow: false,\r\n  },\r\n} = {}) {\r\n  if (!supports) {\r\n    supports = _supports();\r\n  }\r\n\r\n  const element = contextToElement({\r\n    label: 'is/focus-relevant',\r\n    resolveDocument: true,\r\n    context,\r\n  });\r\n\r\n  if (!except.shadow && element.shadowRoot) {\r\n    // a ShadowDOM host receives focus when the focus moves to its content\r\n    return true;\r\n  }\r\n\r\n  const nodeName = element.nodeName.toLowerCase();\r\n\r\n  if (nodeName === 'input' && element.type === 'hidden') {\r\n    // input[type=\"hidden\"] supports.cannot be focused\r\n    return false;\r\n  }\r\n\r\n  if (nodeName === 'input' || nodeName === 'select' || nodeName === 'button' || nodeName === 'textarea') {\r\n    return true;\r\n  }\r\n\r\n  if (nodeName === 'legend' && supports.focusRedirectLegend) {\r\n    // specifics filtered in is/focusable\r\n    return true;\r\n  }\r\n\r\n  if (nodeName === 'label') {\r\n    // specifics filtered in is/focusable\r\n    return true;\r\n  }\r\n\r\n  if (nodeName === 'area') {\r\n    // specifics filtered in is/focusable\r\n    return true;\r\n  }\r\n\r\n  if (nodeName === 'a' && element.hasAttribute('href')) {\r\n    return true;\r\n  }\r\n\r\n  if (nodeName === 'object' && element.hasAttribute('usemap')) {\r\n    // object[usemap] is not focusable in any browser\r\n    return false;\r\n  }\r\n\r\n  if (nodeName === 'object') {\r\n    const svgType = element.getAttribute('type');\r\n    if (!supports.focusObjectSvg && svgType === 'image/svg+xml') {\r\n      // object[type=\"image/svg+xml\"] is not focusable in Internet Explorer\r\n      return false;\r\n    } else if (!supports.focusObjectSwf && svgType === 'application/x-shockwave-flash') {\r\n      // object[type=\"application/x-shockwave-flash\"] is not focusable in Internet Explorer 9\r\n      return false;\r\n    }\r\n  }\r\n\r\n  if (nodeName === 'iframe' || nodeName === 'object') {\r\n    // browsing context containers\r\n    return true;\r\n  }\r\n\r\n  if (nodeName === 'embed' || nodeName === 'keygen') {\r\n    // embed is considered focus-relevant but not focusable\r\n    // see https://github.com/medialize/ally.js/issues/82\r\n    return true;\r\n  }\r\n\r\n  if (element.hasAttribute('contenteditable')) {\r\n    // also see CSS property user-modify below\r\n    return true;\r\n  }\r\n\r\n  if (nodeName === 'audio' && (supports.focusAudioWithoutControls || element.hasAttribute('controls'))) {\r\n    return true;\r\n  }\r\n\r\n  if (nodeName === 'video' && (supports.focusVideoWithoutControls || element.hasAttribute('controls'))) {\r\n    return true;\r\n  }\r\n\r\n  if (supports.focusSummary && nodeName === 'summary') {\r\n    return true;\r\n  }\r\n\r\n  const validTabindex = isValidTabindex(element);\r\n\r\n  if (nodeName === 'img' && element.hasAttribute('usemap')) {\r\n    // Gecko, Trident and Edge do not allow an image with an image map and tabindex to be focused,\r\n    // it appears the tabindex is overruled so focus is still forwarded to the <map>\r\n    return validTabindex && supports.focusImgUsemapTabindex || supports.focusRedirectImgUsemap;\r\n  }\r\n\r\n  if (supports.focusTable && (nodeName === 'table' || nodeName === 'td')) {\r\n    // IE10-11 supports.can focus <table> and <td>\r\n    return true;\r\n  }\r\n\r\n  if (supports.focusFieldset && nodeName === 'fieldset') {\r\n    // IE10-11 supports.can focus <fieldset>\r\n    return true;\r\n  }\r\n\r\n  const isSvgElement = nodeName === 'svg';\r\n  const isSvgContent = element.ownerSVGElement;\r\n  const focusableAttribute = element.getAttribute('focusable');\r\n  const tabindex = tabindexValue(element);\r\n\r\n  if (nodeName === 'use' && tabindex !== null && !supports.focusSvgUseTabindex) {\r\n    // <use> cannot be made focusable by adding a tabindex attribute anywhere but Blink and WebKit\r\n    return false;\r\n  }\r\n\r\n  if (nodeName === 'foreignobject') {\r\n    // <use> can only be made focusable in Blink and WebKit\r\n    return tabindex !== null && supports.focusSvgForeignobjectTabindex;\r\n  }\r\n\r\n  if (elementMatches(element, 'svg a') && element.hasAttribute('xlink:href')) {\r\n    return true;\r\n  }\r\n\r\n  if ((isSvgElement || isSvgContent) && element.focus && !supports.focusSvgNegativeTabindexAttribute && tabindex < 0) {\r\n    // Firefox 51 and 52 treat any natively tabbable SVG element with\r\n    // tabindex=\"-1\" as tabbable and everything else as inert\r\n    // see https://bugzilla.mozilla.org/show_bug.cgi?id=1302340\r\n    return false;\r\n  }\r\n\r\n  if (isSvgElement) {\r\n    return validTabindex || supports.focusSvg || supports.focusSvgInIframe\r\n      // Internet Explorer understands the focusable attribute introduced in SVG Tiny 1.2\r\n      || Boolean(supports.focusSvgFocusableAttribute && focusableAttribute && focusableAttribute === 'true');\r\n  }\r\n\r\n  if (isSvgContent) {\r\n    if (supports.focusSvgTabindexAttribute && validTabindex) {\r\n      return true;\r\n    }\r\n\r\n    if (supports.focusSvgFocusableAttribute) {\r\n      // Internet Explorer understands the focusable attribute introduced in SVG Tiny 1.2\r\n      return focusableAttribute === 'true';\r\n    }\r\n  }\r\n\r\n  // https://www.w3.org/TR/html5/editing.html#sequential-focus-navigation-and-the-tabindex-attribute\r\n  if (validTabindex) {\r\n    return true;\r\n  }\r\n\r\n  const style = window.getComputedStyle(element, null);\r\n  if (isUserModifyWritable(style)) {\r\n    return true;\r\n  }\r\n\r\n  if (supports.focusImgIsmap && nodeName === 'img' && element.hasAttribute('ismap')) {\r\n    // IE10-11 considers the <img> in <a href><img ismap> focusable\r\n    // https://github.com/medialize/ally.js/issues/20\r\n    const hasLinkParent = getParents({context: element}).some(\r\n      parent => parent.nodeName.toLowerCase() === 'a' && parent.hasAttribute('href')\r\n    );\r\n\r\n    if (hasLinkParent) {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  // https://github.com/medialize/ally.js/issues/21\r\n  if (!except.scrollable && supports.focusScrollContainer) {\r\n    if (supports.focusScrollContainerWithoutOverflow) {\r\n      // Internet Explorer does will consider the scrollable area focusable\r\n      // if the element is a <div> or a <span> and it is in fact scrollable,\r\n      // regardless of the CSS overflow property\r\n      if (isScrollableContainer(element, nodeName)) {\r\n        return true;\r\n      }\r\n    } else if (hasCssOverflowScroll(style)) {\r\n      // Firefox requires proper overflow setting, IE does not necessarily\r\n      // https://developer.mozilla.org/en-US/docs/Web/CSS/overflow\r\n      return true;\r\n    }\r\n  }\r\n\r\n  if (!except.flexbox && supports.focusFlexboxContainer && hasCssDisplayFlex(style)) {\r\n    // elements with display:flex are focusable in IE10-11\r\n    return true;\r\n  }\r\n\r\n  const parent = element.parentElement;\r\n  if (!except.scrollable && parent) {\r\n    const parentNodeName = parent.nodeName.toLowerCase();\r\n    const parentStyle = window.getComputedStyle(parent, null);\r\n    if (supports.focusScrollBody && isScrollableContainer(parent, nodeName, parentNodeName, parentStyle)) {\r\n      // scrollable bodies are focusable Internet Explorer\r\n      // https://github.com/medialize/ally.js/issues/21\r\n      return true;\r\n    }\r\n\r\n    // Children of focusable elements with display:flex are focusable in IE10-11\r\n    if (supports.focusChildrenOfFocusableFlexbox) {\r\n      if (hasCssDisplayFlex(parentStyle)) {\r\n        return true;\r\n      }\r\n    }\r\n  }\r\n\r\n  // NOTE: elements marked as inert are not focusable,\r\n  // but that property is not exposed to the DOM\r\n  // https://www.w3.org/TR/html5/editing.html#inert\r\n\r\n  return false;\r\n}\r\n\r\n// bind exceptions to an iterator callback\r\nisFocusRelevantRules.except = function(except = {}) {\r\n  const isFocusRelevant = function(context) {\r\n    return isFocusRelevantRules({\r\n      context,\r\n      except,\r\n    });\r\n  };\r\n\r\n  isFocusRelevant.rules = isFocusRelevantRules;\r\n  return isFocusRelevant;\r\n};\r\n\r\n// provide isFocusRelevant(context) as default iterator callback\r\nconst isFocusRelevant = isFocusRelevantRules.except({});\r\nexport default isFocusRelevant;\r\n"]}