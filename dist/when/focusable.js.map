{"version":3,"sources":["../../src/when/focusable.js"],"names":["context","callback","area","TypeError","element","label","filterCallback","target","_document","handle","disengage","removeEventListener","addEventListener"],"mappings":";;;;;;kBAUe,YAAyC;AAAA,iFAAJ,EAAI;AAAA,MAA/BA,OAA+B,QAA/BA,OAA+B;AAAA,MAAtBC,QAAsB,QAAtBA,QAAsB;AAAA,MAAZC,IAAY,QAAZA,IAAY;;AACtD,MAAI,OAAOD,QAAP,KAAoB,UAAxB,EAAoC;AAClC,UAAM,IAAIE,SAAJ,CAAc,2DAAd,CAAN;AACD;;AAED,MAAMC,UAAU,gCAAiB;AAC/BC,WAAO,gBADwB;AAE/BL;AAF+B,GAAjB,CAAhB;;AAKA,MAAMM,iBAAiB,SAAjBA,cAAiB,CAASC,MAAT,EAAiB;AACtC,QAAI,CAAC,yBAAYA,MAAZ,CAAL,EAA0B;AACxB,aAAO,KAAP;AACD;;AAED,WAAON,SAASM,MAAT,CAAP;AACD,GAND;;AAQA,MAAMC,YAAY,2BAAYJ,OAAZ,CAAlB;AACA,MAAMK,SAAS,2BAAgB,EAAET,SAASI,OAAX,EAAoBH,UAAUK,cAA9B,EAA8CJ,UAA9C,EAAhB,CAAf;AACA,MAAMQ,YAAY,SAAZA,SAAY,GAAW;AAC3BF,cAAUG,mBAAV,CAA8B,OAA9B,EAAuCD,SAAvC,EAAkD,IAAlD;AACAD,cAAUA,OAAOC,SAAP,EAAV;AACD,GAHD;;AAKAF,YAAUI,gBAAV,CAA2B,OAA3B,EAAoCF,SAApC,EAA+C,IAA/C;;AAEA,SAAO,EAAEA,oBAAF,EAAP;AACD,C;;AAjCD;;;;AACA;;;;AACA;;;;AACA;;;;;;;AAPA","file":"focusable.js","sourcesContent":["\r\n/*\r\n  trigger a callback once the context element is focusable and is fully visible in the viewport\r\n*/\r\n\r\nimport whenVisibleArea from './visible-area';\r\nimport isFocusable from '../is/focusable';\r\nimport contextToElement from '../util/context-to-element';\r\nimport getDocument from '../util/get-document';\r\n\r\nexport default function({context, callback, area} = {}) {\r\n  if (typeof callback !== 'function') {\r\n    throw new TypeError('when/focusable requires options.callback to be a function');\r\n  }\r\n\r\n  const element = contextToElement({\r\n    label: 'when/focusable',\r\n    context,\r\n  });\r\n\r\n  const filterCallback = function(target) {\r\n    if (!isFocusable(target)) {\r\n      return false;\r\n    }\r\n\r\n    return callback(target);\r\n  };\r\n\r\n  const _document = getDocument(element);\r\n  const handle = whenVisibleArea({ context: element, callback: filterCallback, area });\r\n  const disengage = function() {\r\n    _document.removeEventListener('focus', disengage, true);\r\n    handle && handle.disengage();\r\n  };\r\n\r\n  _document.addEventListener('focus', disengage, true);\r\n\r\n  return { disengage };\r\n}\r\n"]}