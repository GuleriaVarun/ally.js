{"version":3,"sources":["../../src/when/visible-area.js"],"names":["context","callback","area","TypeError","element","label","raf","evaluate","disengage","cancelAnimationFrame","predicate","checkPredicate","requestAnimationFrame"],"mappings":";;;;;;kBAUe,YAAyC;AAAA,iFAAJ,EAAI;AAAA,MAA/BA,OAA+B,QAA/BA,OAA+B;AAAA,MAAtBC,QAAsB,QAAtBA,QAAsB;AAAA,MAAZC,IAAY,QAAZA,IAAY;;AACtD,MAAI,OAAOD,QAAP,KAAoB,UAAxB,EAAoC;AAClC,UAAM,IAAIE,SAAJ,CAAc,8DAAd,CAAN;AACD;;AAED,MAAI,OAAOD,IAAP,KAAgB,QAApB,EAA8B;AAC5BA,WAAO,CAAP;AACD;;AAED,MAAME,UAAU,gCAAiB;AAC/BC,WAAO,mBADwB;AAE/BL;AAF+B,GAAjB,CAAhB;;AAKA,MAAIM,YAAJ;AACA,MAAIC,WAAW,IAAf;AACA,MAAMC,YAAY,SAAZA,SAAY,GAAW;AAC3BF,WAAOG,qBAAqBH,GAArB,CAAP;AACD,GAFD;;AAIA,MAAMI,YAAY,SAAZA,SAAY,GAAW;AAC3B,WAAO,CAAC,uBAAUN,OAAV,CAAD,IAAuB,2BAAYA,OAAZ,IAAuBF,IAA9C,IAAsDD,SAASG,OAAT,MAAsB,KAAnF;AACD,GAFD;;AAIA,MAAMO,iBAAiB,SAAjBA,cAAiB,GAAW;AAChC,QAAID,WAAJ,EAAiB;AACfH;AACA;AACD;;AAEDC;AACD,GAPD;;AASAD,aAAW,oBAAW;AACpBD,UAAMM,sBAAsBD,cAAtB,CAAN;AACD,GAFD;;AAIAJ;AACA,SAAO,EAAEC,oBAAF,EAAP;AACD,C;;AA5CD;;AACA;;;;AACA;;;;AACA;;;;;;;AAPA","file":"visible-area.js","sourcesContent":["\r\n/*\r\n  execute a callback once an element became fully visible in the viewport\r\n*/\r\n\r\nimport '../prototype/window.requestanimationframe';\r\nimport isVisible from '../is/visible';\r\nimport visibleArea from '../util/visible-area';\r\nimport contextToElement from '../util/context-to-element';\r\n\r\nexport default function({context, callback, area} = {}) {\r\n  if (typeof callback !== 'function') {\r\n    throw new TypeError('when/visible-area requires options.callback to be a function');\r\n  }\r\n\r\n  if (typeof area !== 'number') {\r\n    area = 1;\r\n  }\r\n\r\n  const element = contextToElement({\r\n    label: 'when/visible-area',\r\n    context,\r\n  });\r\n\r\n  let raf;\r\n  let evaluate = null;\r\n  const disengage = function() {\r\n    raf && cancelAnimationFrame(raf);\r\n  };\r\n\r\n  const predicate = function() {\r\n    return !isVisible(element) || visibleArea(element) < area || callback(element) === false;\r\n  };\r\n\r\n  const checkPredicate = function() {\r\n    if (predicate()) {\r\n      evaluate();\r\n      return;\r\n    }\r\n\r\n    disengage();\r\n  };\r\n\r\n  evaluate = function() {\r\n    raf = requestAnimationFrame(checkPredicate);\r\n  };\r\n\r\n  evaluate();\r\n  return { disengage };\r\n}\r\n"]}